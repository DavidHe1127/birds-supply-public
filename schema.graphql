input addEmployeeInput {
  first_name: String
  last_name: String
  email: String
  gender: Gender
  company_id: ID!
  admin: Boolean
  ip_address: String
}

type Company {
  id: ID!
  name: String
  address: String
  employees: [Employee]
}

input delEmployeeInput {
  _id: ID!
}

type Employee {
  id: ID!
  first_name: String
  last_name: String
  email: String
  ip_address: String
  gender: Gender
  company_id: ID
  colleagues: [Employee]
  admin: Boolean
}

enum Gender {
  Female
  Male
}

type Mutation {
  addEmployee(input: addEmployeeInput): Employee
  setEmployee(input: setEmployeeInput): Employee
  delEmployee(input: delEmployeeInput): Employee
}

type Query {
  employee(first_name: String, email: String): Employee
  employees(company_id: ID!): [Employee]
  allAdmins(company_id: ID!): [Employee]
  colleagues(employee_id: ID!, company_id: ID!): [Employee]
  company(id: ID!): Company
  companies: [Company]
}

input setEmployeeInput {
  _id: ID!
  email: String
  company_id: ID!
  admin: Boolean
}

